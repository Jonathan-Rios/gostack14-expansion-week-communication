{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "airbnb",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended",
    "prettier/standard",
    "prettier/react"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier"],
  "rules": {
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-props-no-spreading": "off",
    "space-before-function-paren": "off", // function test" "() - esse "space"
    "react/prop-types": "off", // Usando typescript, ele automaticamente já faz essa função.
    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "no-redeclare": "off",
    "react/jsx-one-expression-per-line": "off", // Permite ter mais de uma expressão por linha.
    "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }],
    "import/prefer-default-export": "off",
    "camelcase": "off",

    //Não precisa typar, quando usar expressions (ArrowFunction)
    "@typescript-eslint/explicit-function-return-type": [ "error", { "allowExpressions": true } ],
    "@typescript-eslint/no-empty-function": [ "error", { "allow": ["arrowFunctions"] }],
    "no-use-before-define": "off",
    "prettier/prettier": ["error", { "endOfLine": "auto" } ],
    "@typescript-eslint/ban-types": "off",
    "import/extensions": [ "error", "ignorePackages", {"ts": "never", "tsx": "never"} ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
